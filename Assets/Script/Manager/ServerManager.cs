using WHDle.Util;
using UnityEngine;
using BackEnd;

namespace WHDle.Server
{
    using Database;
    using WHDle.Database.Dto;

    public class ServerManager : Singleton<ServerManager>
    {
        // ???? ?????? ?????? ???????? ????
        public bool isFirstLogin = true;

        // Server???? ?????? User ??????????.
        // public DtoUserInfo userInfo;

        protected override void Awake()
        {
            base.Awake();

            // Send Queue ?????? ???????? ???? ??????????.
            // ?????? ???? ???? ?? ???? ???????? ???? ?????????? ?????? ???????? ???? ??????????.
            if (gameObject != null)
                SendQueue.StartSendQueue(true);

            if (transform.parent == null)
                DontDestroyOnLoad(this);
        }

        public void Update()
        {   
            // ?????? ???????? ???????????? ??????????.
            if (Backend.IsInitialized)
            {
                // ?????? ?????? ???????? ???? AysncPoll?? ??????????.
                Backend.AsyncPoll();

                // SendQueue?? ???????? ???????????? ??????????.
                if (SendQueue.IsInitialize)
                {
                    // ???? ???? ?????? ????????????/
                    SendQueue.Poll();
                }
            }
        }

        private void OnApplicationPause(bool pause)
        {
            if (pause) SendQueue.PauseSendQueue();
            else SendQueue.ResumeSendQueue();
        }

        private void OnApplicationQuit()
        {
            SendQueue.StopSendQueue();
        }

        public void Initialize()
        {
            Backend.InitializeAsync(true, true, callback =>
            {
                if (callback.IsSuccess())
                    // ???? ?????? ?????? ???? ?????? ?????? ??????????.
                    GameManager.Instance.TitleController.LoadComplete = true;
                else
                    // ?????? ???????? ?? UI?? ???? ?????? ???????
                    Debug.Log($"Server Initialize Faild");
            });
        }

        public void CheckAppVersion()
        {
// ?????????? ?????? ???? ?????? ???? ?????? ?????? ??????.
// UNITY_EDITOR?? ?????? ?????? ?? ???? ???????? ??????????.
#if UNITY_EDITOR
            GameManager.Instance.TitleController.LoadComplete = true;
#else
            // ???? ???? ?????? ?????? ?? ??????????????.
            GameManager.Instance.TitleController.LoadComplete = true;
#endif
        }

        public void CheckIsFirstLogin()
        {
            var chart =  Backend.GameData.GetMyData("Account", new Where(), 10);

            var jsonData = chart.GetReturnValuetoJSON();

            isFirstLogin = (jsonData["rows"].Count == 0) ? true : false;
        }
    }
}